import streamlit as st
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from scipy.stats import norm, t

def run():

    st.title("‚úÖBloque 2: Pruebas de hip√≥tesis para una media")

    opcion = st.sidebar.radio("Elige un tema:", [
        "Tipos de errores (I y II)",
        "Pruebas de una y dos colas",
        "C√°lculo del estad√≠stico Z o t",
        "Decisi√≥n: rechazar o no H‚ÇÄ",
        "Ejemplo interactivo"
    ])

    if opcion == "Tipos de errores (I y II)":
        st.header("Tipos de errores")
        st.write("""
        En toda prueba estad√≠stica hay dos tipos de errores posibles:

        - **Error tipo I (Œ±):** Rechazar la hip√≥tesis nula (H‚ÇÄ) cuando en realidad es verdadera.
        - **Error tipo II (Œ≤):** No rechazar H‚ÇÄ cuando en realidad es falsa.

        - El nivel de significancia (Œ±) es la probabilidad de cometer error tipo I.
        - La potencia de la prueba (1 - Œ≤) es la probabilidad de detectar un efecto real.
                 
        En pruebas de hip√≥tesis, no se pueden eliminar totalmente los errores, 
        porque siempre trabajamos con datos muestrales y hay incertidumbre. 
        Lo que s√≠ podemos es controlar las probabilidades de cometerlos.

        üî¥ Error Tipo I (Œ±)

        Definici√≥n: Rechazar la hip√≥tesis nula (H‚ÇÄ) cuando en realidad es verdadera.

        C√≥mo controlarlo: fijamos un nivel de significancia Œ± (por ejemplo, 0.05) antes de hacer la prueba.

        Ejemplo: Acusar a un inocente.

        üü† Error Tipo II (Œ≤)

        Definici√≥n: No rechazar H‚ÇÄ cuando en realidad es falsa.

        C√≥mo reducirlo: aumentando el tama√±o de muestra o usando una prueba con mayor potencia.

        Ejemplo: Dejar libre a un culpable.
        """)

        st.write("### Interactividad: relaci√≥n entre Œ± y los errores")
    

        alpha_slider = st.slider("Selecciona nivel de significancia (Œ±)", 0.01, 0.2, 0.05)
        # Para ilustrar, asumimos que al reducir Œ± aumenta Œ≤ (relaci√≥n conceptual)
        beta_estimada = 0.25 - alpha_slider  # solo para fines did√°cticos
        if beta_estimada < 0:
            beta_estimada = 0.01

        st.write(f"**Error Tipo I (Œ±):** {alpha_slider:.2f}")
        st.write(f"**Error Tipo II (Œ≤):** {beta_estimada:.2f} (aprox.)")

        # Visualizaci√≥n simple
        fig, ax = plt.subplots(figsize=(5,3))
        ax.bar(["Error Tipo I (Œ±)", "Error Tipo II (Œ≤)"], [alpha_slider, beta_estimada], color=["red", "orange"])
        ax.set_ylim(0, 0.3)
        ax.set_title("Relaci√≥n conceptual entre Œ± y Œ≤")
        st.pyplot(fig)

        st.info("""
        üîç **Interpretaci√≥n:**  
        - Si reduces **Œ±**, cometes menos **Error Tipo I**, pero es m√°s probable cometer **Error Tipo II** (Œ≤).  
        - Si aumentas **Œ±**, al rev√©s: m√°s riesgo de **Error Tipo I**, pero menos **Error Tipo II**.  
        Lo ideal es equilibrar Œ± y Œ≤ aumentando el tama√±o de la muestra para reducir ambos.
        """)


    elif opcion == "Pruebas de una y dos colas":

        st.markdown("## üìù Pasos para realizar una prueba de hip√≥tesis")

        st.markdown("""
        1. **Formular las hip√≥tesis**  
        - Hip√≥tesis nula (H‚ÇÄ): afirmaci√≥n que se quiere evaluar (ej. la media es igual a cierto valor).  
        - Hip√≥tesis alternativa (H‚ÇÅ): afirmaci√≥n contraria o diferente.

        2. **Calcular el estad√≠stico de prueba**  
        - Valor num√©rico que resume la informaci√≥n de la muestra respecto a H‚ÇÄ.  
        - Ejemplos:  
            - Z = (XÃÑ - Œº‚ÇÄ) / (œÉ / ‚àön) (si œÉ conocida)  
            - t = (XÃÑ - Œº‚ÇÄ) / (s / ‚àön) (si œÉ desconocida)

        3. **Determinar el valor cr√≠tico**  
        - Depende del nivel de significancia (Œ±) y tipo de prueba (una cola o dos colas).  
        - Se obtiene de tablas de distribuci√≥n Z o t.

        4. **Comparar el estad√≠stico con el valor cr√≠tico**  
        - Si est√° en la regi√≥n de rechazo ‚Üí **rechazar H‚ÇÄ**  
        - Si est√° en la regi√≥n de aceptaci√≥n ‚Üí **no rechazar H‚ÇÄ**

        5. **Conclusi√≥n**  
        - Decidir si hay evidencia suficiente para rechazar H‚ÇÄ o no.  
        - Tambi√©n se puede usar el p-valor para la decisi√≥n compar√°ndolo con Œ±.
        """)

        st.header("Pruebas de una y dos colas")
        st.write("""
        - **Prueba de dos colas:** H‚ÇÅ: Œº ‚â† Œº‚ÇÄ ‚Üí Rechazamos H‚ÇÄ si el estad√≠stico cae en cualquiera de las dos colas.
        - **Prueba de cola derecha:** H‚ÇÅ: Œº > Œº‚ÇÄ ‚Üí Regi√≥n cr√≠tica solo en la derecha.
        - **Prueba de cola izquierda:** H‚ÇÅ: Œº < Œº‚ÇÄ ‚Üí Regi√≥n cr√≠tica solo en la izquierda.
        """)

        # Visualizaci√≥n de regiones de rechazo para dos colas
        x = np.linspace(-4,4,500)
        y = norm.pdf(x)
        alpha = 0.05
        z_crit = norm.ppf(1-alpha/2)
        fig, ax = plt.subplots(figsize=(8,3))
        ax.plot(x,y)
        ax.fill_between(x,0,y,where=(x<-z_crit)|(x>z_crit),color='red',alpha=0.3,label='Regi√≥n de rechazo')
        ax.fill_between(x,0,y,where=(x>=-z_crit)&(x<=z_crit),color='green',alpha=0.3,label='Aceptaci√≥n H‚ÇÄ')
        ax.legend()
        st.pyplot(fig)

    elif opcion == "C√°lculo del estad√≠stico Z o t":
        st.header("C√°lculo del estad√≠stico de prueba")
        st.write("""
        Para una media, el estad√≠stico se calcula como:

        - Si œÉ es conocida:  
        **Z = (XÃÑ - Œº‚ÇÄ) / (œÉ / ‚àön)**
        - Si œÉ es desconocida:  
        **t = (XÃÑ - Œº‚ÇÄ) / (s / ‚àön)**

        Donde:
        - XÃÑ = media muestral
        - Œº‚ÇÄ = media hipot√©tica
        - œÉ o s = desviaci√≥n est√°ndar poblacional o muestral
        - n = tama√±o de la muestra
        """)

    elif opcion == "Decisi√≥n: rechazar o no H‚ÇÄ":
        st.header("Decisi√≥n en pruebas de hip√≥tesis")
        st.write("""
        Para tomar la decisi√≥n:

        1. **Calcula el estad√≠stico de prueba (Z o t)**.
        2. **Obt√©n el valor cr√≠tico** seg√∫n Œ± y el tipo de prueba.
        3. **Compara:**
        - Si cae en la **regi√≥n de rechazo**, se **rechaza H‚ÇÄ**.
        - Si cae en la zona central, **no se rechaza H‚ÇÄ**.
        
        Tambi√©n puedes comparar el **p-valor** con Œ±:
        - Si p < Œ± ‚Üí Rechazamos H‚ÇÄ
        - Si p ‚â• Œ± ‚Üí No rechazamos H‚ÇÄ
        """)

    elif opcion == "Ejemplo interactivo":
        st.header("Ejemplo interactivo")

        mu0 = st.number_input("Media hipot√©tica Œº‚ÇÄ:", value=50.0)
        sigma_known = st.checkbox("¬øConoces la desviaci√≥n est√°ndar poblacional? (usa Z si s√≠, t si no)", value=True)
        alpha = st.slider("Nivel de significancia (Œ± en %):", 1, 10, 5) / 100
        tipo_prueba = st.selectbox("Tipo de prueba:", ["Dos colas", "Cola derecha", "Cola izquierda"])

        n = st.number_input("Tama√±o de la muestra (n):", 1, 1000, 30)
        media_muestral = st.number_input("Media muestral:", value=52.0)
        desv_muestral = st.number_input("Desviaci√≥n est√°ndar muestral:", value=10.0)

        error_estandar = desv_muestral / np.sqrt(n)
        estadistico = (media_muestral - mu0) / error_estandar

        # Valores cr√≠ticos
        if tipo_prueba == "Dos colas":
            valor_critico = norm.ppf(1 - alpha/2) if sigma_known else t.ppf(1 - alpha/2, n-1)
            region_rechazo = abs(estadistico) > valor_critico
        elif tipo_prueba == "Cola derecha":
            valor_critico = norm.ppf(1 - alpha) if sigma_known else t.ppf(1 - alpha, n-1)
            region_rechazo = estadistico > valor_critico
        else:
            valor_critico = norm.ppf(alpha) if sigma_known else t.ppf(alpha, n-1)
            region_rechazo = estadistico < valor_critico

        st.write(f"Estad√≠stico calculado: **{estadistico:.3f}**")
        st.write(f"Valor cr√≠tico: **{valor_critico:.3f}**")

        if region_rechazo:
            st.error("üö® Conclusi√≥n: Rechazamos H‚ÇÄ. Hay evidencia para aceptar H‚ÇÅ.")
        else:
            st.success("Conclusi√≥n: No rechazamos H‚ÇÄ. No hay evidencia suficiente contra ella.")

        # Visualizaci√≥n
        x = np.linspace(-4,4,500)
        y = norm.pdf(x) if sigma_known else t.pdf(x, n-1)

        fig, ax = plt.subplots(figsize=(8,4))
        ax.plot(x,y,label="Distribuci√≥n bajo H‚ÇÄ")
        ax.axvline(estadistico, color='green', linestyle='--', label='Estad√≠stico muestral')

        if tipo_prueba == "Dos colas":
            ax.axvline(valor_critico, color='red', linestyle='--', label='Valor cr√≠tico')
            ax.axvline(-valor_critico, color='red', linestyle='--')
            ax.fill_between(x,0,y,where=(x>valor_critico)|(x<-valor_critico),color='red',alpha=0.3)
        else:
            ax.axvline(valor_critico, color='red', linestyle='--', label='Valor cr√≠tico')
            if tipo_prueba == "Cola derecha":
                ax.fill_between(x,0,y,where=(x>valor_critico),color='red',alpha=0.3)
            else:
                ax.fill_between(x,0,y,where=(x<valor_critico),color='red',alpha=0.3)

        ax.legend()
        ax.set_title("Prueba de hip√≥tesis: regi√≥n de rechazo vs aceptaci√≥n")
        st.pyplot(fig)
